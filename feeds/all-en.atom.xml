<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>码 链</title><link href="http://lzbpli.github.io/" rel="alternate"></link><link href="http://lzbpli.github.io/feeds/all-en.atom.xml" rel="self"></link><id>http://lzbpli.github.io/</id><updated>2017-07-27T00:00:00+08:00</updated><entry><title>Markdown Example</title><link href="http://lzbpli.github.io/markdown-example.html" rel="alternate"></link><published>2017-07-27T00:00:00+08:00</published><updated>2017-07-27T00:00:00+08:00</updated><author><name>ikerbo</name></author><id>tag:lzbpli.github.io,2017-07-27:/markdown-example.html</id><summary type="html">&lt;p&gt;首先声名，这并不是一份完整的&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;的语法介绍，需要看完整的介绍请点击&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown Syntax Documentation&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文的Markdown源代码可以至后台编辑文章进行查看，文章结尾也将以源代码的形式贴出&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;段落&lt;/h3&gt;
&lt;p&gt;一个段落是由一个或多个连续的行构成，段落间靠一个或以上视觉上的空行划分。一般的段落不应该用空格或制表符缩进&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;这是一个段落。它有两个句子。

这是另一个段落。它也有 
两个句子。
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;换行&lt;/h3&gt;
&lt;p&gt;在文本中输入的换行会从最终生成的结果中删除，浏览器会根据可用空间自动换行。如果想强迫换行，可以在行尾插入至少两个空格。&lt;/p&gt;
&lt;h3&gt;强调&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*强调* 或者 _强调_  (示例：斜体)
**加重强调** 或者 __加重强调__ (示例：粗体)
***特别强调*** 或者 ___特别强调___ (示例：粗斜体)
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;代码&lt;/h3&gt;
&lt;p&gt;要在Markdown中插入代码，你有两种选择。 一种是把代码用反引号(`)(键盘上Esc键下面的键)包起，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;夹杂着`一些代码`的文字内容 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;首先声名，这并不是一份完整的&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;的语法介绍，需要看完整的介绍请点击&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown Syntax Documentation&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文的Markdown源代码可以至后台编辑文章进行查看，文章结尾也将以源代码的形式贴出&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;段落&lt;/h3&gt;
&lt;p&gt;一个段落是由一个或多个连续的行构成，段落间靠一个或以上视觉上的空行划分。一般的段落不应该用空格或制表符缩进&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;这是一个段落。它有两个句子。

这是另一个段落。它也有 
两个句子。
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;换行&lt;/h3&gt;
&lt;p&gt;在文本中输入的换行会从最终生成的结果中删除，浏览器会根据可用空间自动换行。如果想强迫换行，可以在行尾插入至少两个空格。&lt;/p&gt;
&lt;h3&gt;强调&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*强调* 或者 _强调_  (示例：斜体)
**加重强调** 或者 __加重强调__ (示例：粗体)
***特别强调*** 或者 ___特别强调___ (示例：粗斜体)
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;代码&lt;/h3&gt;
&lt;p&gt;要在Markdown中插入代码，你有两种选择。 一种是把代码用反引号(`)(键盘上Esc键下面的键)包起，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;夹杂着`一些代码`的文字内容,
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;又或者以制表符或至少四个空格缩进的行，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    第一行代码
    第二行代码
    第三行代码
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;后面一种用法会让Markdown保留所有的空白字符——而与之相反，一般情况下，Markdown会删除所有换行和空格，打乱原有的缩进和排版。&lt;/p&gt;
&lt;h3&gt;列表&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* 无序(没有编号的)列表中的一项
    * 一个子项，要以一个制表符或者4个空格缩进
* 无序列表中的另一个项
1. 有序(排好序，有编号的)列表中的一项
2. 有序列表中的另一个项
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;标题&lt;/h3&gt;
&lt;p&gt;可以在标题内容前输入特定数量的井号('#')来实现对应级别的HTML样式的标题(HTML提供六级标题)。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 一级标题
#### 四级标题
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一级和二级标题还有一种写法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;一级标题
===================

二级标题
--------------------
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;引用&lt;/h3&gt;
&lt;p&gt;引用只需要在被引用的内容段落开头加上右尖括号('&amp;gt;')即可。你可以选择只在开头加一个。也可以在每行前面都加一个，效果是一样的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; 这一整段的内容都会作为一个HTML的引用元素。引用元素是会自动优化排版的（reflowable，可回流）。你可以任意地将引用的内容包含进来，然后所有这些都会被解析成为单独一个引用元素。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上述内容会转换成以下HTML内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;blockquote&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt;这一整段的内容都会作为一个HTML的引用元素。引用元素是会自动优化排版的（reflowable，可回流）。你可以任意地将引用的内容包含进来，然后所有这些都会被解析成为单独一个引用元素。&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;引用可以嵌套。如果要在一个引用里插入一个引用，可以用两个('&amp;gt;')开头。依此类推，根据嵌套层次加相应数量的符号。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; 这是一个引用。这是第一行
这是第二行。
&amp;gt;&amp;gt; 这是一个嵌套的引用。这是第一行。
这是第二行
&amp;gt; 
&amp;gt; 外层引用的第三行。前面需要一个视觉上的空行表示内层嵌套的结束，空行前面的(&amp;#39;&amp;gt;&amp;#39;)可以有可以没有。
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;链接&lt;/h3&gt;
&lt;p&gt;链接可以在行内插入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[链接文字](链接地址)

例子： [Markdown](http://zh.wikipedia.com/wiki/Markdown)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;另一种选择是，链接地址可以放在段落后面的脚注，前面放上链接引用标签区分。举例说，先在内容行内插入以下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[链接文字][链接引用标签]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后在段落的后面（或者文档的结尾）放上以下内容，就可以生成一个链接：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[链接引用标签]: 链接地址 &amp;quot;链接标题&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;水平分割线&lt;/h3&gt;
&lt;p&gt;要生成水平分割线，可以在单独一行里输入3个或以上的短横线、星号或者下划线实现。短横线和星号之间可以输入任意空格。以下每一行都产生一条水平分割线。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* * *
***
*****
- - -
---------------------------------------
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本文源代码作为示例&lt;/p&gt;
&lt;p&gt;[gist id=4200618]&lt;/p&gt;</content></entry><entry><title>使用pelican写博客</title><link href="http://lzbpli.github.io/shi-yong-pelicanxie-bo-ke.html" rel="alternate"></link><published>2017-07-24T00:00:00+08:00</published><updated>2017-07-24T00:00:00+08:00</updated><author><name>ikerbo</name></author><id>tag:lzbpli.github.io,2017-07-24:/shi-yong-pelicanxie-bo-ke.html</id><summary type="html">&lt;h1&gt;使用pelican写博客&lt;/h1&gt;
&lt;h2&gt;写博客&lt;/h2&gt;
&lt;p&gt;在content下面创建一个文件pelican-wirte.md&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;

&lt;span class="n"&gt;Following&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;favorite&lt;/span&gt; &lt;span class="n"&gt;mechanical&lt;/span&gt; &lt;span class="n"&gt;keyboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;生成博客&lt;/h2&gt;
&lt;p&gt;博客写好之后还不能进行访问，需要把写好的博客转化为html代码，执行下面的命令进行生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成的文件都在&lt;strong&gt;output&lt;/strong&gt;目录里面，这些文件就是博客运行需要的静态文件。&lt;/p&gt;
&lt;p&gt;上传博客&lt;/p&gt;
&lt;p&gt;在命令行里面切换到output目录下面，git命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ~/project/yoursite/output

git push
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;使用pelican写博客&lt;/h1&gt;
&lt;h2&gt;写博客&lt;/h2&gt;
&lt;p&gt;在content下面创建一个文件pelican-wirte.md&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;

&lt;span class="n"&gt;Following&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;favorite&lt;/span&gt; &lt;span class="n"&gt;mechanical&lt;/span&gt; &lt;span class="n"&gt;keyboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;生成博客&lt;/h2&gt;
&lt;p&gt;博客写好之后还不能进行访问，需要把写好的博客转化为html代码，执行下面的命令进行生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成的文件都在&lt;strong&gt;output&lt;/strong&gt;目录里面，这些文件就是博客运行需要的静态文件。&lt;/p&gt;
&lt;p&gt;上传博客&lt;/p&gt;
&lt;p&gt;在命令行里面切换到output目录下面，git命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ~/project/yoursite/output

git push
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>VoidyBootstrap README</title><link href="http://lzbpli.github.io/voidybootstrap-readme.html" rel="alternate"></link><published>2017-04-07T00:00:00+08:00</published><updated>2017-04-07T00:00:00+08:00</updated><author><name>ikerbo</name></author><id>tag:lzbpli.github.io,2017-04-07:/voidybootstrap-readme.html</id><summary type="html">&lt;h1&gt;VoidyBootstrap&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Version 2.1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://getbootstrap.com"&gt;Bootstrap 3&lt;/a&gt; blog theme for the
&lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt; static site generator.&lt;/p&gt;
&lt;p&gt;VoidyBootstrap is a Pelican theme that aims to be mobile friendly,
responsive, flexible and easily customisable. It can be used in single
column mode, or responsive 2 column mode with sidebar.&lt;/p&gt;
&lt;p&gt;While the theme provides …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;VoidyBootstrap&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Version 2.1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A &lt;a href="http://getbootstrap.com"&gt;Bootstrap 3&lt;/a&gt; blog theme for the
&lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt; static site generator.&lt;/p&gt;
&lt;p&gt;VoidyBootstrap is a Pelican theme that aims to be mobile friendly,
responsive, flexible and easily customisable. It can be used in single
column mode, or responsive 2 column mode with sidebar.&lt;/p&gt;
&lt;p&gt;While the theme provides lots of customisation options, care has been
taken to make it usable right out of the box with minimal configuration
and sensible defaults -- albeit with the ubiquitous Bootstrap look and
feel. But that's kind of the idea with this theme -- start with bog
standard Bootstrap, then customise as much or as little as you like.&lt;/p&gt;
&lt;p&gt;On larger screens, with the sidebar enabled, you get a clean and
responsive 2 column layout. At the top there's a navbar containing page
links, and jumbotron area. The default sidebar has category links and
optional tag-cloud. &lt;a href="http://fontawesome.io/"&gt;Font Awesome 4&lt;/a&gt; is used for
icons.&lt;/p&gt;
&lt;p&gt;VoidyBootstrap is functional but deliberately minimal in terms of
design. It can be used as is, if your design need are modest and all you
want is basic theme that "just works", with all the common features
you'd expect from a blog theme. But for those who do want to tinker and
customise, it can be used as a starting point for creating custom
Bootstrap-based websites. This theme has many features designed to
facilitate creating a custom design on top of the default Bootstrap base
it provides. Regardless of whether you use few or many of the
customisation features provided, what you get is a carefully crafted
Pelican theme that tries to accommodate common blogging needs and
provide ways to easily accomplish common customisations. It strives to
be as minimal, flexible and unopinionated as possible, while still being
as usable and simple as possible.&lt;/p&gt;
&lt;p&gt;Customised CSS, JavaScript and other modifications can be easily
incorporated using configuration settings, and content can be added to
the base layout (without modifying existing templates) by strategically
adding template fragments.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Clone this repo, then in your &lt;code&gt;pelicanconf.py&lt;/code&gt; set the &lt;code&gt;THEME&lt;/code&gt; variable
to point to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;THEME = &amp;#39;path/to/voidy-bootstrap/&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Out of the box what you get is the stock standard Bootstrap 3 look and
feel. To customise things see below.&lt;/p&gt;
&lt;h2&gt;Example Settings&lt;/h2&gt;
&lt;p&gt;All of these are optional, but here is a basic example of common
settings you might want to configure.&lt;/p&gt;
&lt;p&gt;The following should be set in &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SITESUBTITLE =&amp;#39;Sub-title that goes underneath site name in jumbotron.&amp;#39;
SITETAG = &amp;quot;Text that&amp;#39;s displayed in the title on the home page.&amp;quot;

# Extra stylesheets, for bootstrap overrides or additional styling.
STYLESHEET_FILES = (&amp;quot;pygment.css&amp;quot;, &amp;quot;voidybootstrap.css&amp;quot;,)

# Put taglist at end of articles, and use the default sharing button implementation.
CUSTOM_ARTICLE_FOOTERS = (&amp;quot;taglist.html&amp;quot;, &amp;quot;sharing.html&amp;quot;, )
CUSTOM_SCRIPTS_ARTICLE = &amp;quot;sharing_scripts.html&amp;quot;

# Default sidebar template. Omit this setting for single column mode without sidebar.
SIDEBAR = &amp;quot;sidebar.html&amp;quot;

SOCIAL = ((&amp;#39;Google+&amp;#39;, &amp;#39;http://plus.google.com/userid&amp;#39;,
         &amp;#39;fa fa-google-plus-square fa-fw fa-lg&amp;#39;),
        (&amp;#39;Twitter&amp;#39;, &amp;#39;https://twitter.com/username&amp;#39;, 
         &amp;#39;fa fa-twitter-square fa-fw fa-lg&amp;#39;),
        (&amp;#39;LinkedIn&amp;#39;, &amp;#39;http://linkedin-url&amp;#39;, 
         &amp;#39;fa fa-linkedin-square fa-fw fa-lg&amp;#39;),
        (&amp;#39;BitBucket&amp;#39;, &amp;#39;http://bitbucket.org/username&amp;#39;, 
         &amp;#39;fa fa-bitbucket-square fa-fw fa-lg&amp;#39;),
        (&amp;#39;GitHub&amp;#39;, &amp;#39;http://github.com/username&amp;#39;,
         &amp;#39;fa fa-github-square fa-fw fa-lg&amp;#39;),
        )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following are probably better suited for &lt;code&gt;publishconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FEED_DOMAIN = SITEURL
FEED_ALL_ATOM = &amp;#39;feeds/all.atom.xml&amp;#39;

DISQUS_SITENAME = &amp;quot;disqussitename&amp;quot;
GOOGLE_ANALYTICS = &amp;quot;UA-xxxxxxxxxx&amp;quot;
GOOGLE_ANALYTICS_SITEID = &amp;quot;gasiteid&amp;quot;
TWITTER_USERNAME = &amp;quot;twitterusername&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Basic Configuration and Customisation&lt;/h2&gt;
&lt;p&gt;By default all required CSS and JavaScript files are downloaded from
CDNs. Intentionally little is supplied in the theme's &lt;code&gt;static/css&lt;/code&gt;. Just
a &lt;code&gt;pygment.css&lt;/code&gt; file, and a sample css file (&lt;code&gt;voidybootstrap.css&lt;/code&gt;) with
very minimal styling is provided as a starting point.&lt;/p&gt;
&lt;p&gt;The simplest way to customise things is to override the standard
Bootstrap styles as necessary. The theme intentionally avoids loading
any additional stylesheets by default, but this can easily be done by
using the &lt;code&gt;STYLESHEET_FILES&lt;/code&gt; setting. &lt;code&gt;STYLESHEET_FILES&lt;/code&gt; is a list for
specifying additional stylesheets that will be loaded by the &lt;code&gt;base.html&lt;/code&gt;
template after the main Bootstrap CSS file. Place any CSS stylesheet
files you may require in the &lt;code&gt;static/css&lt;/code&gt; directory and add the
filenames to the &lt;code&gt;STYLESHEET_FILES&lt;/code&gt; setting in &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example, if you've placed your own CSS styling in a stylesheet
called &lt;code&gt;custom.css&lt;/code&gt; (possibly using &lt;code&gt;voidybootstrap.css&lt;/code&gt; as a starting
point), then you would need something like this in your
&lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;STYLESHEET_FILES = (&amp;quot;pygment.css&amp;quot;, &amp;quot;custom.css&amp;quot;,)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Custom Bootstrap&lt;/h2&gt;
&lt;p&gt;As an alternative, or in addition, you can easily replace the standard
Bootstrap file with a customised one. The &lt;code&gt;BOOTSTRAP_STYLESHEET&lt;/code&gt; setting
is provided for this. The default behaviour -- if this variable is &lt;em&gt;not&lt;/em&gt;
set -- is that a standard &lt;code&gt;bootstrap.min.css&lt;/code&gt; will be used from a CDN.&lt;/p&gt;
&lt;p&gt;To use a different (i.e. customised) Bootstrap stylesheet, set
&lt;code&gt;BOOTSTRAP_STYLESHEET&lt;/code&gt; to the filename of a stylesheet to use instead.&lt;/p&gt;
&lt;p&gt;This could be a customised Bootstrap stylesheet compiled manually from
the Bootstrap source files, or perhaps one obtained from an online
source.&lt;/p&gt;
&lt;p&gt;For example, you could use the &lt;a href="http://getbootstrap.com/customize/"&gt;Bootstrap
customizer&lt;/a&gt; to create your own
customised Bootstrap CSS file. Place that file in &lt;code&gt;static/css&lt;/code&gt; and set
&lt;code&gt;BOOTSTRAP_STYLESHEET&lt;/code&gt; to its filename.&lt;/p&gt;
&lt;p&gt;Similarly, a &lt;a href="http://bootswatch.com/"&gt;Bootswatch&lt;/a&gt; theme can be easily
integrated. Select a theme and download the files. Place all the
necessary CSS files in &lt;code&gt;static/css&lt;/code&gt;. Set &lt;code&gt;BOOTSTRAP_STYLESHEET&lt;/code&gt; to the
filename of the main Bootstrap CSS file, and specify any additional CSS
files in the &lt;code&gt;STYLESHEET_FILES&lt;/code&gt; list.&lt;/p&gt;
&lt;h2&gt;Further Customisation&lt;/h2&gt;
&lt;p&gt;Like any other Pelican theme, you can just take the templates provided
and modify them to your liking. However, if you're happy with the
overall layout and just want to add/subtract things here are there, this
theme provides "hooks" to do just that by setting specific variables in
your &lt;code&gt;pelicanconf.py&lt;/code&gt; and/or providing your own template fragments. For
simple customisations, this can make is relatively straightforward to
isolate modifications and easily keep up to date with any upstream
changes.&lt;/p&gt;
&lt;p&gt;These customisation "hooks" are settings that can be configured in
&lt;code&gt;pelicanconf.py&lt;/code&gt; to point to filenames of custom template fragments.
These template fragments will either add or replace content in the
default layout provided by the theme. For example, if &lt;code&gt;pelicanconf.py&lt;/code&gt;
contains the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CUSTOM_FOOTER = &amp;quot;custom/footer.html&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then the bottom of every page will contain whatever is in the template
file located at:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;templates/includes/custom/footer.html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See the "Custom Includes" section below for further details.&lt;/p&gt;
&lt;p&gt;Note that these template fragments must be relative to the theme's
&lt;code&gt;templates/includes/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2&gt;Standard Settings&lt;/h2&gt;
&lt;p&gt;VoidyBootstrap honors the following &lt;a href="http://docs.getpelican.com/en/latest/settings.html"&gt;standard Pelican
settings&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SITEURL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SITENAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SITESUBTITLE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LINKS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOCIAL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TWITTER_USERNAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FEED_DOMAIN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FEED_ALL_ATOM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FEED_ALL_RSS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DISQUS_SITENAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GOOGLE_ANALYTICS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the most part they should work as expected, although some may behave
slightly differently than in the default Pelican theme (see next
section).&lt;/p&gt;
&lt;h2&gt;Settings&lt;/h2&gt;
&lt;p&gt;This theme supports the following configuration settings. All are
optional.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;SITESUBTITLE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Sub-title -- displayed in jumbotron.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SITETAG&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Text that will be placed in the title on the home page.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;DEFAULT_METADESC&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Default value for HTML meta description tag. Individual articles and
pages can specify their own meta description by using the theme's
custom &lt;code&gt;description&lt;/code&gt; metadata tag.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;BOOTSTRAP_STYLESHEET&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Bootstrap CSS file to use instead of default, as described above.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;STYLESHEET_URLS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A list of URLS for additional stylesheets that should be pulled in
by the &lt;code&gt;base.html&lt;/code&gt; template, like CSS files from a CDN. Useful for
adding the bootstrap theme CSS, for example.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;STYLESHEET_FILES&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;An list of filenames (relative to the &lt;code&gt;/theme/css/&lt;/code&gt; directory) for
additional stylesheets that should be pulled in by the &lt;code&gt;base.html&lt;/code&gt;
template (after any STYLESHEET_URLS entries).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SKIP_DEFAULT_CSS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;No default CSS files at all will be used if this is set to True. In
this case the only stylesheets used will be those specified in
&lt;code&gt;STYLESHEET_FILES&lt;/code&gt; and &lt;code&gt;STYLESHEET_URLS&lt;/code&gt;. This setting is provided
to give more control over which specific Bootstrap (and Font
Awesome) CSS files are used (i.e. it allows a specific version to be
configured through settings). But it means for things to work
properly at a minimum the Bootstrap and Font Awesome need to be
configured using the STYLESHEET_* settings.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SKIP_DEFAULT_JS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Don't load any default JavaScript in the base template. If this is
set to True, at a minimum jQuery and the Bootstrap JavaScript must
be provided via &lt;code&gt;JAVASCRIPT_FILES&lt;/code&gt; and/or &lt;code&gt;JAVASCRIPT_URLS&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SKIP_DEFAULT_NAVIGATION&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Don't display navbar at the top of the page. (If required a custom
navigation template can be configured via &lt;code&gt;CUSTOM_SITE_HEADERS&lt;/code&gt;.)&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;JAVASCRIPT_FILES&lt;/code&gt; and &lt;code&gt;JAVASCRIPT_URLS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Similar to the STYLESHEET_* settings, these allow arbitrary
JavaScript files to be loaded. They will be referenced at the bottom
of &lt;code&gt;base.html&lt;/code&gt;, after any default script files.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ARCHIVES_URL&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;URL of archives page. Default is &lt;code&gt;archives.html&lt;/code&gt;. If you're
modifying &lt;code&gt;ARCHIVES_SAVE_AS&lt;/code&gt; in your pelicanconf.py then you'll
probably need to change this setting as well.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;TWITTER_USERNAME&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Set to a valid Twitter username to enable the twitter sharing
button.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;TWITTER_CARD&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;If set to True, Twitter Card meta-data will be added to article
pages. If this is enabled, &lt;code&gt;TWITTER_USERNAME&lt;/code&gt; must also be set.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;OPEN_GRAPH&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Set to True to enable Facebook Open Graph meta-properties.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;OPEN_GRAPH_FB_APP_ID&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Facebook App ID.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;OPEN_GRAPH_ARTICLE_AUTHOR&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Value for Open Graph &lt;code&gt;article:author&lt;/code&gt; property, which will be set on
article pages.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;OPEN_GRAPH_IMAGE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Default value for Open Graph &lt;code&gt;og:image&lt;/code&gt; property on index pages.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;DEFAULT_SOCIAL_IMAGE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Default value for Open Graph &lt;code&gt;og:image&lt;/code&gt; property (and Twitter card
image, if enabled) on articles and pages. The custom &lt;code&gt;social_image&lt;/code&gt;
metadata tag can be used to specify a per-article (or per-page)
value, which will always take precedence&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;FAVICON&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Allows an alternative favicon filename to be specified.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;Sidebar Settings&lt;/h2&gt;
&lt;p&gt;As of version 2.0 of VoidyBootstrap, the sidebar is optional. To enable
the default sidebar, add the following line to your &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SIDEBAR = &amp;quot;sidebar.html&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will give you a simple sidebar with social media links and a list
of Categories, which can be customised using the options described in
this section.&lt;/p&gt;
&lt;p&gt;Optionally, if you'd like to use the LINKS setting or include a list of
tags in the default sidebar, add the following to &lt;code&gt;pelicanconf.py&lt;/code&gt; after
&lt;code&gt;SIDEBAR&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CUSTOM_SIDEBAR_MIDDLES = (&amp;quot;sb_links.html&amp;quot;, &amp;quot;sb_taglist.html&amp;quot;, )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As of Pelican 3.6 &lt;a href="https://github.com/getpelican/pelican/commit/9dd4080fe6162849aec0946cc8406b04da764157"&gt;tag cloud support has been removed from
Pelican&lt;/a&gt;,
so if you'd like a proper tag cloud in the sidebar you'll need to
configure the &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/tag_cloud"&gt;tag_cloud
plugin&lt;/a&gt;
and add the following to &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CUSTOM_SIDEBAR_MIDDLES = (&amp;quot;sb_tagcloud.html&amp;quot;, )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The "sidebar" is an area where many sites will require something
specific and it's unlikely any particular implementation will satisfy
everyone all the time. However, there are things that commonly appear in
sidebars (e.g. author bio, categories, tag cloud, etc), so the theme
includes a default sidebar template that provides a fairly typical
sidebar implementation. The default sidebar has a few customisation
settings so that common things can be added and configured via settings
in &lt;code&gt;pelicanconf.py&lt;/code&gt; (as described in this section), but it's intended
more as a starting point for custom implementations rather than an
attempt to satisfy all possible use cases.&lt;/p&gt;
&lt;p&gt;For those who might want something completely different in a sidebar,
just create your own sidebar template (possibly using
&lt;code&gt;includes/sidebar.html&lt;/code&gt; as a starting point), and then set &lt;code&gt;SIDEBAR&lt;/code&gt; to
point to it. This will completely replace the theme's default sidebar
with whatever is in your custom sidebar template.&lt;/p&gt;
&lt;p&gt;But for those happy enough to stick with the default sidebar, the
following settings are available to customise it:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;SOCIAL&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Social media links to display in sidebar. This option is handled a
bit differently than in the default Pelican theme. This should be a
list/tuple where each element is a tuple with 3 elements: (name,
URL, Font Awesome icon class). (See the "Example Settings" section
above for an example.) The last element (icon class) can be omitted,
in which case a generic icon will be used instead.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;LINKS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Optional list of arbitrary links to display in the sidebar. Each
element must be a tuple with 2 elements: (link title, URL). For this
option to work with the default sidebar, "sb_links.html" needs to
be added to &lt;code&gt;CUSTOM_SIDEBAR_MIDDLES&lt;/code&gt; (as shown above).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SIDEBAR_HIDE_CATEGORIES&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A list of categories is displayed in the sidebar by default. Set
this option to True to disable this category list.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SIDEBAR_SIZE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;The number of columns in the Bootstrap grid the sidebar should take
up. The default is 3.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;See also &lt;code&gt;CUSTOM_SIDEBAR_TOP&lt;/code&gt;, &lt;code&gt;CUSTOM_SIDEBAR_BOTTOM&lt;/code&gt; and
&lt;code&gt;CUSTOM_SIDEBAR_MIDDLES&lt;/code&gt; below.&lt;/p&gt;
&lt;h2&gt;Custom Includes&lt;/h2&gt;
&lt;p&gt;The following settings (all optional), if specified, should be set to
filenames of appropriate template fragments that will be included at
strategic points from the primary templates. They will override or add
to existing sections of content. All filename paths must be relative to
the theme's &lt;code&gt;templates/includes&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Note that in the following setting names, an "*" (asterisk) represents
a page type, possible values of which are: INDEX, ARTICLE, PAGE,
CATEGORY, TAG, AUTHOR, ARCHIVES.&lt;/p&gt;
&lt;p&gt;(Also note that in Version 2.0 of this theme, many settings were
renamed, and many new ones added. See CHANGES.rst.)&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_SITE_HEADERS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;List of templates that will replace the default site header area
(i.e. the jumbotron area).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_HEADER_*&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Add custom content after the site headers, before the main
container, and outside any container dev (and therefore before any
content columns).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_CONTAINER_TOP_*&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Similar to CUSTOM_HEADER_*, but inside the main container div.
Not inside any row or column, so any content here will span across
the top of both columns (in 2 column mode).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_CONTENT_TOP_*&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Template fragment that will be inserted at the top of the content
column, before anything else.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_CONTENT_BOTTOM_*&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;These will be included right at the bottom of the content column.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_CONTAINER_BOTTOM_*&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;These will be included at the bottom of the main container, after
the columns. Content will end up inside a container but outside of
columns, spanning across the bottom, below both columns (in 2 column
mode).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_ARTICLE_HEADERS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;List of templates that will replace the default article header
provided in &lt;code&gt;includes/article_header.html&lt;/code&gt; on &lt;em&gt;article pages only&lt;/em&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_INDEX_ARTICLE_HEADERS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;List of templates that will replace the default article header
provided in &lt;code&gt;includes/article_header.html&lt;/code&gt; on &lt;em&gt;index pages only&lt;/em&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_ARTICLE_PRECONTENT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Template fragment that will be inserted just before the start of the
article body text (after any headers, image and standfirst).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_ARTICLE_FOOTERS&lt;/code&gt; and &lt;code&gt;CUSTOM_PAGE_FOOTERS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;List of templates that will included at the bottom of
articles/pages, after the body text but before the comments. Can be
used to configure any appropriate content, like sharing buttons,
taglist, etc.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_FOOTER&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Footer template to be included by &lt;code&gt;base.html&lt;/code&gt;. Anything here (e.g.
copyright text) will appear between footer tags at the bottom of
every page.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_SCRIPTS_ARTICLE&lt;/code&gt; and &lt;code&gt;CUSTOM_SCRIPTS_PAGE&lt;/code&gt; and &lt;code&gt;CUSTOM_SCRIPTS_ARCHIVE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Template fragment for any additional javascript code specific to
articles, pages and archives respectively (useful for things like
social media sharing code). Will be included at the bottom of pages,
just before the closing body tag. Set to
&lt;code&gt;includes/sharing_scripts.html&lt;/code&gt; to use the default provided
implementation.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_SCRIPTS_BASE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;As above, but will be included on every page.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_SIDEBAR_TOP&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Included by &lt;code&gt;sidebar.html&lt;/code&gt; at the top of the sidebar. Provides a
convenient place for an "about" blurb, for example.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_SIDEBAR_BOTTOM&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Included by &lt;code&gt;sidebar.html&lt;/code&gt; at the bottom of the sidebar.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_SIDEBAR_MIDDLES&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;List of templates that will be included by &lt;code&gt;sidebar.html&lt;/code&gt; after
Categories but before &lt;code&gt;CUSTOM_SIDEBAR_BOTTOM&lt;/code&gt;. Provided mainly as an
easy way to use the default tag cloud implementation. Realistically,
if you're doing more customisations than this in your sidebar, a
better option is just to create your own implementation of
&lt;code&gt;sidebar.html&lt;/code&gt; and use this instead (as described in "Sidebar
Settings").&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_INDEX_META&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Included by &lt;code&gt;index.html&lt;/code&gt; in the &lt;code&gt;head&lt;/code&gt; section. Can be used to add
extra HTML meta tags to index pages, for example.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CUSTOM_HTML_HEAD&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Included by &lt;code&gt;base.html&lt;/code&gt; in the &lt;code&gt;head&lt;/code&gt; section.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;Custom Metadata Tags&lt;/h2&gt;
&lt;p&gt;This theme supports the following (optional) custom metadata tags for
use in articles and pages.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;description&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Can be used in pages and articles to provide a value for the HTML
meta description tag, and social meta data (i.e. Open Graph).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;standfirst&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Text for a summary/intro paragraph that will be placed at the start
of an article. This paragraph will be given a CSS class of
"standfirst" so that additional styles can be applied.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;social_image&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Set to an image filename (relative to &lt;code&gt;{{ SITEURL }}/images/&lt;/code&gt;) to
provide a value for an article's &lt;code&gt;og:image&lt;/code&gt; meta property.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;image&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Set to an image filename (relative to &lt;code&gt;{{ SITEURL }}/images/&lt;/code&gt;) to
display a (responsive) "featured image" at the top of an article,
underneath any standfirst.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;schema_type&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Pages only. A schema.org itemtype for the page. Default is
"WebPage".&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;javascript&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Pages only. Filename of a JavaScript file (relative to &lt;code&gt;theme/js/&lt;/code&gt;
directory) to load for this page.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;Security Considerations&lt;/h2&gt;
&lt;p&gt;By default, this theme obtains various dependency files (styles,
scripts, etc) from CDNs. In an attempt to follow current security best
practices, files linked from CDNs are retrieved via HTTPS, and use
&lt;a href="https://en.wikipedia.org/wiki/Subresource_Integrity"&gt;integrity
attributes.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In addition, if your server has a &lt;a href="https://en.wikipedia.org/wiki/Content_Security_Policy"&gt;Content-Security-Policy
(CSP)&lt;/a&gt; header
configured, it should take into account the CDNs used by the theme.&lt;/p&gt;
&lt;p&gt;For example, a policy in Nginx configuration syntax that covers the
external resources used by this theme might look something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;add_header&lt;/span&gt; &lt;span class="nt"&gt;Content-Security-Policy&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;default-src &amp;#39;none&amp;#39; ; img-src &amp;#39;self&amp;#39; ; font-src &amp;#39;self&amp;#39; https://maxcdn.bootstrapcdn.com ; form-action &amp;#39;self&amp;#39; ; frame-ancestors &amp;#39;none&amp;#39; ; media-src &amp;#39;self&amp;#39; ; script-src &amp;#39;self&amp;#39; https://ajax.googleapis.com https://maxcdn.bootstrapcdn.com https://oss.maxcdn.com ; style-src &amp;#39;self&amp;#39; https://maxcdn.bootstrapcdn.com &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Author&lt;/h2&gt;
&lt;p&gt;Robert Iwancz\
www.voidynullness.net\
&lt;a href="https://twitter.com/robulouski"&gt;@robulouski&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Screenshot&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Screenshot of VoidyBootstrap theme with default Bootstrap 3 styling." src="screenshot.png"&gt;&lt;/p&gt;
&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;Licensed under the &lt;a href="http://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>My First python</title><link href="http://lzbpli.github.io/my-first-python.html" rel="alternate"></link><published>2017-03-22T00:00:00+08:00</published><updated>2017-03-22T00:00:00+08:00</updated><author><name>ikerbo</name></author><id>tag:lzbpli.github.io,2017-03-22:/my-first-python.html</id><summary type="html">&lt;h1&gt;dwdadw&lt;/h1&gt;
&lt;p&gt;@(北京)[首都,天安门，长安街，鸟巢]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;beijing&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;dwdadw&lt;/h1&gt;
&lt;p&gt;@(北京)[首都,天安门，长安街，鸟巢]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;beijing&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>使用pelican搭建github博客</title><link href="http://lzbpli.github.io/shi-yong-pelicanda-jian-githubbo-ke.html" rel="alternate"></link><published>2017-03-22T00:00:00+08:00</published><updated>2017-03-22T00:00:00+08:00</updated><author><name>ikerbo</name></author><id>tag:lzbpli.github.io,2017-03-22:/shi-yong-pelicanda-jian-githubbo-ke.html</id><summary type="html">&lt;h2&gt;安装pelican、markdown&lt;/h2&gt;
&lt;p&gt;在安装前要确保安装了python，然后直接使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;安装pelican、markdown&lt;/h2&gt;
&lt;p&gt;在安装前要确保安装了python，然后直接使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>My First Review</title><link href="http://lzbpli.github.io/my-first-review.html" rel="alternate"></link><published>2010-12-03T10:20:00+08:00</published><updated>2010-12-03T10:20:00+08:00</updated><author><name>ikerbo</name></author><id>tag:lzbpli.github.io,2010-12-03:/my-first-review.html</id><summary type="html">&lt;h1&gt;欢迎使用马克飞象&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能丰富&lt;/strong&gt; ：支持高亮代码块、&lt;em&gt;LaTeX&lt;/em&gt; 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;得心应手&lt;/strong&gt; ：简洁高效的编辑器，提供&lt;a href="http://maxiang.info/client_zh"&gt;桌面客户端&lt;/a&gt;以及&lt;a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop"&gt;离线Chrome App&lt;/a&gt;，支持移动端 Web；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;深度整合&lt;/strong&gt; ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2&gt;Markdown简介&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— &lt;a href="https://zh.wikipedia.org/wiki/Markdown"&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为&lt;strong&gt;粗体&lt;/strong&gt;或者&lt;em&gt;斜体&lt;/em&gt;，创建一个&lt;a href="http://www.example.com"&gt;链接&lt;/a&gt;或一个脚注&lt;sup id="fnref-demo"&gt;&lt;a class="footnote-ref" href="#fn-demo"&gt;1&lt;/a&gt;&lt;/sup&gt;。下面列举了几个高级功能，更多语法请按&lt;code&gt;Ctrl …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;欢迎使用马克飞象&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能丰富&lt;/strong&gt; ：支持高亮代码块、&lt;em&gt;LaTeX&lt;/em&gt; 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;得心应手&lt;/strong&gt; ：简洁高效的编辑器，提供&lt;a href="http://maxiang.info/client_zh"&gt;桌面客户端&lt;/a&gt;以及&lt;a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop"&gt;离线Chrome App&lt;/a&gt;，支持移动端 Web；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;深度整合&lt;/strong&gt; ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2&gt;Markdown简介&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— &lt;a href="https://zh.wikipedia.org/wiki/Markdown"&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为&lt;strong&gt;粗体&lt;/strong&gt;或者&lt;em&gt;斜体&lt;/em&gt;，创建一个&lt;a href="http://www.example.com"&gt;链接&lt;/a&gt;或一个脚注&lt;sup id="fnref-demo"&gt;&lt;a class="footnote-ref" href="#fn-demo"&gt;1&lt;/a&gt;&lt;/sup&gt;。下面列举了几个高级功能，更多语法请按&lt;code&gt;Ctrl + /&lt;/code&gt;查看帮助。 &lt;/p&gt;
&lt;h3&gt;代码块&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@requires_authorization&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;somefunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;A docstring&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;param1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;param2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# interesting&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Greater&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;param1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SomeClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;interpreter&lt;/span&gt;
&lt;span class="s1"&gt;... prompt&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;LaTeX 公式&lt;/h3&gt;
&lt;p&gt;可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式：&lt;/p&gt;
&lt;p&gt;$$  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$&lt;/p&gt;
&lt;h3&gt;表格&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Item&lt;/th&gt;
&lt;th align="right"&gt;Value&lt;/th&gt;
&lt;th align="center"&gt;Qty&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Computer&lt;/td&gt;
&lt;td align="right"&gt;1600 USD&lt;/td&gt;
&lt;td align="center"&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Phone&lt;/td&gt;
&lt;td align="right"&gt;12 USD&lt;/td&gt;
&lt;td align="center"&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe&lt;/td&gt;
&lt;td align="right"&gt;1 USD&lt;/td&gt;
&lt;td align="center"&gt;234&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;流程图&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;st=&amp;gt;start: Start
e=&amp;gt;end
op=&amp;gt;operation: My Operation
cond=&amp;gt;condition: Yes or No?

st-&amp;gt;op-&amp;gt;cond
cond(yes)-&amp;gt;e
cond(no)-&amp;gt;op
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以及时序图:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Alice-&amp;gt;Bob: Hello Bob, how are you?
Note right of Bob: Bob thinks
Bob--&amp;gt;Alice: I am good thanks!
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;想了解更多，请查看&lt;strong&gt;流程图&lt;/strong&gt;&lt;a href="http://adrai.github.io/flowchart.js/"&gt;语法&lt;/a&gt;以及&lt;strong&gt;时序图&lt;/strong&gt;&lt;a href="http://bramp.github.io/js-sequence-diagrams/"&gt;语法&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;复选框&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;- [ ]&lt;/code&gt; 和 &lt;code&gt;- [x]&lt;/code&gt; 语法可以创建复选框，实现 todo-list 等功能。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] 已完成事项&lt;/li&gt;
&lt;li&gt;[ ] 待办事项1&lt;/li&gt;
&lt;li&gt;[ ] 待办事项2&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在&lt;strong&gt;马克飞象&lt;/strong&gt;中修改 Markdown 原文才可生效。下个版本将会全面支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;印象笔记相关&lt;/h2&gt;
&lt;h3&gt;笔记本和标签&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;增加了&lt;code&gt;@(笔记本)[标签A|标签B]&lt;/code&gt;语法, 以选择笔记本和添加标签。 &lt;strong&gt;绑定账号后&lt;/strong&gt;， 输入&lt;code&gt;(&lt;/code&gt;自动会出现笔记本列表，请从中选择。&lt;/p&gt;
&lt;h3&gt;笔记标题&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 &lt;code&gt;欢迎使用马克飞象&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;快捷编辑&lt;/h3&gt;
&lt;p&gt;保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到&lt;strong&gt;马克飞象&lt;/strong&gt;中打开并编辑该笔记。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;数据同步&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;通过&lt;strong&gt;将Markdown原文以隐藏内容保存在笔记中&lt;/strong&gt;的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;离线存储&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过&lt;code&gt;文档管理&lt;/code&gt;打开。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，&lt;strong&gt;请务必经常及时同步到印象笔记&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;编辑器相关&lt;/h2&gt;
&lt;h3&gt;设置&lt;/h3&gt;
&lt;p&gt;右侧系统菜单（快捷键&lt;code&gt;Ctrl + M&lt;/code&gt;）的&lt;code&gt;设置&lt;/code&gt;中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。&lt;/p&gt;
&lt;h3&gt;快捷键&lt;/h3&gt;
&lt;p&gt;帮助    &lt;code&gt;Ctrl + /&lt;/code&gt;
同步文档    &lt;code&gt;Ctrl + S&lt;/code&gt;
创建文档    &lt;code&gt;Ctrl + Alt + N&lt;/code&gt;
最大化编辑器    &lt;code&gt;Ctrl + Enter&lt;/code&gt;
预览文档 &lt;code&gt;Ctrl + Alt + Enter&lt;/code&gt;
文档管理    &lt;code&gt;Ctrl + O&lt;/code&gt;
系统菜单    &lt;code&gt;Ctrl + M&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;加粗    &lt;code&gt;Ctrl + B&lt;/code&gt;
插入图片    &lt;code&gt;Ctrl + G&lt;/code&gt;
插入链接    &lt;code&gt;Ctrl + L&lt;/code&gt;
提升标题    &lt;code&gt;Ctrl + H&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;关于收费&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;为新用户提供 10 天的试用期，试用期过后需要&lt;a href="maxiang.info/vip.html"&gt;续费&lt;/a&gt;才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-demo"&gt;
&lt;p&gt;这是一个示例脚注。请查阅 &lt;a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes"&gt;MultiMarkdown 文档&lt;/a&gt; 关于脚注的说明。 &lt;strong&gt;限制：&lt;/strong&gt; 印象笔记的笔记内容使用 &lt;a href="https://dev.yinxiang.com/doc/articles/enml.php"&gt;ENML&lt;/a&gt; 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致&lt;code&gt;脚注&lt;/code&gt;和&lt;code&gt;TOC&lt;/code&gt;无法正常点击。&amp;#160;&lt;a class="footnote-backref" href="#fnref-demo" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content></entry></feed>